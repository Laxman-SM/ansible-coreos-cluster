---
- name: Find previous instances and clean up
  hosts: tag_Name_NAT:&tag_env_{{ environ | default("develop") }}:&{{ lookup('env', 'AWS_DEFAULT_REGION') }}
  gather_facts: False
  tags: find
  tasks:
    - name: add to terminate-group
      group_by:
        key: terminate-group

- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
  - keys/credentials.yaml
  - group_vars/vpc.yaml
  - group_vars/etcd_cluster.yaml
  - group_vars/nat.yaml
  - group_vars/coreos_cluster.yaml

  roles:
    # generate etcd key pair
    - role: keygen
      keypair_region: "{{ ec2_region }}"
      keypair_name: "{{ etcd_keypair_name }}"
      keypair_file: "{{ etcd_keypair_file }}"
    # generate nat key pair
    - role: keygen
      keypair_region: "{{ ec2_region }}"
      keypair_name: "{{ nat_keypair_name }}"
      keypair_file: "{{ nat_keypair_file }}"
    # generate coreos key pair
    - role: keygen
      keypair_region: "{{ ec2_region }}"
      keypair_name: "{{ coreos_keypair_name }}"
      keypair_file: "{{ coreos_keypair_file }}"

    # generate CA https certificate for skydns.local, it must be included in CoreOS
    - role: https_certs

    # generate GPG keyrings for data encryption
    - role: gpg_keyrings

    # create a new VPC
    - role: vpc

    # create etcd cluster (with autoscaling group)
    - role: etcd_cluster

    # create volumes for coreos cluster
    - role: create_volume
      volume: "{{ grafana_volume }}"
    - role: create_volume
      volume: "{{ influxdb_volume }}"
    - role: create_volume
      volume: "{{ es_volume }}"
    - role: create_volume
      volume: "{{ rabbitmq_master_volume }}"
    - role: create_volume
      volume: "{{ result_upload_volume }}"

    # create coreos cluster (with autoscaling group): must run after etcd_cluster role
    - role: coreos_cluster

    # setup network: VPC peering, NAT, route tables
    - role: network

- hosts: terminate-group
  connection: local
  gather_facts: False
  roles:
    - terminate
