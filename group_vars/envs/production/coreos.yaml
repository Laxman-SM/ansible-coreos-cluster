# coreos - parameters
coreos_keypair_name: coreos-keypair-prod
coreos_keypair_file: coreos-key-prod.pem

# choose either: alpha, beta or stable channel
# (!) currently using "alpha" since flannel 0.5.0 (with AWS backend support) available only on alpha
coreos_channel: alpha
coreos_version: 833.0.0

coreos_cluster_size: 4
coreos_max_cluster_size: 16
coreos_health_check_period: 60

grafana_volume:
  name: "grafana-{{ env | default('production') }}"
  size: 5
  type: gp2
  
influxdb_volume:
  name: "influxdb-{{ env | default('production') }}"
  size: 80
  type: gp2

rabbitmq_master_volume:
  name: "rabbitmq-master-{{ env | default('production') }}"
  size: 20
  type: gp2

result_upload_volume:
  name: "result-upload-{{ env | default('production') }}"
  size: 20
  type: gp2
  
coreos_block_device_mappings:
  - DeviceName: /dev/xvda
    Ebs:
      VolumeSize: 60
      VolumeType: "gp2"
      DeleteOnTermination: true

coreos_log_key: "{{ coreos_log_key_production }}"

coreos_flannel_cidr_block: 192.168.0.0/16

# note: for flannel use manually create role with required pilicies
#       https://coreos.com/flannel/docs/latest/vpc-backend.html
#       https://coreos.com/blog/introducing-flannel-0.5.0-with-aws-and-gce/
coreos_instance_profile: flannel-role

coreos_asg_name: coreos-asg-prod

coreos_lc_name: coreos-lc-prod

coreos_elb_name: coreos-elb-prod

coreos_instance_type: m3.xlarge     # 4 vCPU, 15GB RAM, 2x40 SSD

coreos_instance_tags:
  - Name: coreos
    group: gaia
    type: cluster_node
    env: production
    decription: CoreOS HA Cluster Node

elb_security_group:
  name: elb_sg_prod
  desc: the security group for ELB
  rules:
    - proto: tcp
      from_port: 80
      to_port: 80
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 88
      to_port: 88
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 443
      to_port: 443
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 444
      to_port: 444
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 1936
      to_port: 1936
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 8083
      to_port: 8083
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 8086
      to_port: 8086
      cidr_ip: 0.0.0.0/0

coreos_security_group:
  name: coreos_sg_prod
  desc: the security group for CoreOS cluster
  rules:
    - proto: tcp
      from_port: 2379
      to_port: 2379
      group_name: coreos_sg_prod
    - proto: tcp
      from_port: 2380
      to_port: 2380
      group_name: coreos_sg_prod
    - proto: tcp
      from_port: 4001
      to_port: 4001
      group_name: coreos_sg_prod
    - proto: tcp
      from_port: 7001
      to_port: 7001
      group_name: coreos_sg_prod
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: "{{ bastion_vpc_cidr_block }}"
    - proto: tcp
      from_port: 80
      to_port: 80
      group_id: "{{ elb_sg.group_id }}"
    - proto: tcp
      from_port: 88
      to_port: 88
      group_id: "{{ elb_sg.group_id }}"
    - proto: tcp
      from_port: 1936
      to_port: 1936
      group_id: "{{ elb_sg.group_id }}"
    - proto: tcp
      from_port: 8083
      to_port: 8083
      group_id: "{{ elb_sg.group_id }}"
    - proto: tcp
      from_port: 8086
      to_port: 8086
      group_id: "{{ elb_sg.group_id }}"
    - proto: tcp
      from_port: 8050
      to_port: 8050
      cidr_ip: "{{ bastion_vpc_cidr_block }}"

# https server certificate
gaia_ca_file: "ca.{{ vpc_dns_zone }}"
