---
- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
  - keys/credentials.yaml
  - group_vars/vpc.yaml
  - group_vars/coreos_cluster.yaml
  - group_vars/rds.yaml

  roles:
    # generate etcd key pair
    - role: keygen
      keypair_region: "{{ ec2_region }}"
      keypair_name: "{{ etcd_keypair_name }}"
      keypair_file: "{{ etcd_keypair_file }}"
      tags: [ install ]

    # generate coreos key pair
    - role: keygen
      keypair_region: "{{ ec2_region }}"
      keypair_name: "{{ coreos_keypair_name }}"
      keypair_file: "{{ coreos_keypair_file }}"
      tags: [ install ]

    # generate GPG keyrings for data encryption
    - role: gpg_keyrings
      tags: [ install ]

    # load content for gaia CA files
    - role: https_certs
      tags: [ install ]

    # collect vpc facts
    - role: vpc_facts
      tags: [install]

    # create a new VPC
    - role: vpc

    # create S3 bucket
    - role: s3_config

    # find CoreOS AMI from specified channel
    - role: find_coreos_ami
      tags: [ install ]

    # create etcd cluster (with autoscaling group): ATTENTION - this is First CoreOS cluster to create!!!
    - role: cluster
      cluster_type: etcd

    # create etcd cluster (with autoscaling group)
    - role: cluster
      cluster_type: coreos

    #
    # # create elasticsearch cluster (with autoscaling group)
    # - role: cluster
    #   cluster_type: elasticsearch
    #
    # # create rabbitmq cluster (with autoscaling group)
    # - role: cluster
    #   cluster_type: rabbitmq

    # # create volumes for coreos cluster
    # - { role: create_volume,  volume: "{{ es_volume }}", volume_name: "es-1-{{ environ }}", when: 0 < elasticsearch_cluster_size }
    # - { role: create_volume,  volume: "{{ es_volume }}", volume_name: "es-2-{{ environ }}", when: 1 < elasticsearch_cluster_size }
    # - { role: create_volume,  volume: "{{ es_volume }}", volume_name: "es-3-{{ environ }}", when: 2 < elasticsearch_cluster_size }
    # - { role: create_volume,  volume: "{{ rabbitmq_volume }}", volume_name: "rabbitmq-1-{{ environ }}", when: 0 < rabbitmq_cluster_size }
    # - { role: create_volume,  volume: "{{ rabbitmq_volume }}", volume_name: "rabbitmq-2-{{ environ }}", when: 1 < rabbitmq_cluster_size }
    # - { role: create_volume,  volume: "{{ rabbitmq_volume }}", volume_name: "rabbitmq-3-{{ environ }}", when: 2 < rabbitmq_cluster_size }
    # - { role: create_volume,  volume: "{{ result_upload_volume }}", volume_name: "result-upload-{{ environ }}" }
    #
    # # create RDS
    # - role: rds_config
    #
    # # create coreos cluster (with autoscaling group): must run after etcd_cluster role
    # - role: coreos_cluster
    #
    # # create RabbitMQ cluster near CoreOS cluster (same network and discovery URL, different autoscaling group)
    # - role: rabbitmq_cluster
    #
    # # create Elasticsearch cluster near CoreOS cluster (same network and discovery URL, different autoscaling group)
    # - role: elasticsearch_cluster
    #
    # # setup network: VPC peering, NAT, route tables
    # - role: network

# - hosts: terminate-group
#   connection: local
#   gather_facts: False
#   roles:
#     - terminate
