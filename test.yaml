- hosts: localhost
  connection: local
  gather_facts: False
  vars:
    channel: beta
    discovery:
      size: 5
  vars_files:
  - group_vars/all.yaml
  - group_vars/envs/{{ env | default("production") }}/vpc.yaml
  - group_vars/envs/{{ env | default("production") }}/etcd.yaml
  - group_vars/envs/{{ env | default("production") }}/nat.yaml
  - group_vars/envs/{{ env | default("production") }}/coreos.yaml

  tasks:

  # search for latest CoreOS AMI from 'channel'
  # - name: search for the latest NAT AMI image
  #   ec2_ami_find:
  #     region: "{{ ec2_region }}"
  #     name: "CoreOS-{{channel}}-*"
  #     virtualization_type: hvm
  #     sort: name
  #     sort_order: descending
  #     sort_end: 1
  #     no_result_action: fail
  #   register: find_out
  # - name: get CoreOS AMI
  #   set_fact:
  #     etcd_ami: "{{ find_out.results[0] }}"
  # - debug: var=etcd_ami

# - name: Find previous instances and clean up
#   hosts: tag_Name_NAT:&tag_env_{{ env | default("production") }}
#   gather_facts: False
#   tags: find
#   tasks:
#     - name: add to terminate-group
#       group_by:
#         key: terminate-group
#     - debug: var=terminate-group

  # - name: Turning off source destinatiob check
  #   local_action: command aws ec2 modify-instance-attribute --region {{ ec2_region }} --instance-id i-9570b13e --no-source-dest-check

  # - name: get bastion vpc route table
  #   ec2_vpc_route_table_facts:
  #     region: "{{ ec2_region }}"
  #     filters:
  #       tag:Name: "{{ bastion_vpc_rt_name }}"
  #       tag:env: "{{ env | default('production') }}"
  #   register: result
  #
  # - debug: msg="Route --> {{item.id}}"
  #   with_items: "{{result.route_tables}}"

  - name: get discovery url
    set_fact:
      discovery_url: "{{ lookup('pipe', 'curl -s https://discovery.etcd.io/new?size='+item) }}"
    with_items:
      - "5"
