---
  # get current account id
  - name: get user details
    local_action: command aws iam get-user --output json
    register: myuser
  - set_fact:
      myuser_out: "{{ myuser.stdout }}"
  - debug: msg="Working on account {{ myuser_out.User.Arn[13:25] }} ..."

  # try acquiring acm certificate (currently only exist for us-east-1)
  - name: list acm certificates for our domain
    shell: aws acm list-certificates --certificate-statuses ISSUED
    ignore_errors: yes
    register: acm_result
  - set_fact:
      certificate_summary_list: "{{ acm_result.stdout }}"
  - name: set acm certificate var
    set_fact:
      certificate_arn: "{{ certificate_summary_list.CertificateSummaryList | selectattr('DomainName','equalto', '*.gaiahub.io') | map(attribute='CertificateArn') | list | first }}"
    when: "acm_result.rc == 0"

  - debug: msg="There is no issued certificate in aws acm, please check if certificate is expired and should be renewd."
    when: "acm_result.rc != 0"

  - name: check if self-signed certificate for ELB already exists
    local_action: command aws iam get-server-certificate --server-certificate-name ELB_Certificate.{{ ec2_region }}
    ignore_errors: yes
    register: cert
    when: "acm_result.rc != 0"

  - name: create self-signed certificate for ELB
    local_action: command openssl req -new -nodes -x509 -subj "/C=US/ST=California/L=Palo Alto/O=HP Enterprise/CN=*.{{ ec2_region }}.elb.amazonaws.com" -days 3650 -keyout keys/{{ ec2_region }}/elb.{{ ec2_region }}.key -out keys/{{ ec2_region }}/elb.{{ ec2_region }}.crt -extensions v3_ca creates=keys/{{ ec2_region }}/elb.{{ ec2_region }}.crt
    when: "cert is defined and cert.rc != 0"

  - name: upload self-signed certificate for ELB
    local_action: command aws iam upload-server-certificate --server-certificate-name ELB_Certificate.{{ ec2_region }} --certificate-body file://keys/{{ ec2_region }}/elb.{{ ec2_region }}.crt --private-key file://keys/{{ ec2_region }}/elb.{{ ec2_region }}.key
    when: "cert is defined and cert.rc != 0"

  - name: set self-signed ssl certificate var if acm certificate not defined
    set_fact:
      certificate_arn: "arn:aws:iam::{{ myuser_out.User.Arn[13:25] }}:server-certificate/ELB_Certificate.{{ ec2_region }}"
    when: certificate_arn is not defined
