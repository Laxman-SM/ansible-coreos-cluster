---

- name: Create the security group for the etcd cluster
  ec2_group:
    name: "{{ etcd_security_group.name }}"
    description: "{{ etcd_security_group.desc }}"
    vpc_id: "{{ vpc_id }}"
    region: "{{ ec2_region }}"
    rules: "{{ etcd_security_group.rules }}"
  register: etcd_sg

# generate user-data from template
- set_fact:
    etcd_discovery_url: "{{ lookup('pipe', 'curl -s https://discovery.etcd.io/new?size='+item) }}"
  with_items:
    - "{{etcd_cluster_size}}"
- name: create user-data template
  template: src='user-data.j2' dest='/tmp/user-data.txt'
- name: load user-data content
  set_fact:
    # user_data: "{{ lookup('file', '/tmp/user-data.txt') | b64encode }}" <-- base64 encoded user-data is not recognized by CoreOS
    user_data: "{{ lookup('file', '/tmp/user-data.txt') }}"

# using JSON file as a workaround for Ansible bug: https://github.com/ansible/ansible/issues/9362
- name: create etcd volume json template
  template: src='volume.j2' dest='/tmp/etcd_volume.json'

# create etcd launch configuration
- name: create etcd launch configuration
  shell: "aws autoscaling create-launch-configuration --launch-configuration-name '{{ etcd_lc_name }}' --key-name '{{ etcd_keypair_name }}' --image-id '{{ coreos_ami.ami_id }}' --security-groups '{{ etcd_sg.group_id }}' --instance-type '{{ etcd_instance_type }}' --user-data 'file:///tmp/user-data.txt' --block-device-mappings 'file:///tmp/etcd_volume.json'"

# create etcd autoscale group
- name: create etcd autoscale group
  ec2_asg:
    name: "{{ etcd_asg_name }}"
    region: "{{ ec2_region }}"
    launch_config_name: "{{ etcd_lc_name }}"
    health_check_period: "{{ etcd_health_check_period }}"
    desired_capacity: "{{ etcd_cluster_size }}"
    min_size: "{{ etcd_cluster_size }}"
    max_size: "{{ etcd_max_cluster_size }}"
    tags: "{{ etcd_instance_tags }}"
    vpc_zone_identifier: "{{ vpc_private_subnets }}"
