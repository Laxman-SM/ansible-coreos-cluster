- name: create a new vpc
  ec2_vpc:
    region: "{{ ec2_region }}"
    cidr_block: "{{ vpc_cidr_block }}"
    resource_tags: "{{ vpc_resource_tags }}"
    internet_gateway: "{{ vpc_internet_gateway|string }}"
    subnets: "{{ vpc_subnets }}"
    wait: true
  register: ec2_vpc_out

# associate VPC with Bastion DNS
- name: discover DNS zone
  local_action: "command aws route53 list-hosted-zones-by-name --dns-name {{ vpc_dns_zone }} --max-items 2 --output json"
  register: list_zones_result_out
- set_fact:
    dns_zone: "{{ list_zones_result_out.stdout | from_json | get_dns_zone(vpc_dns_zone + '.') }}"

- name: Check DNS zone existence
  fail:
    msg: "Expected DNS zone was not found"
  when: dns_zone == ""

- name: associate VPC with Bastion DNS zone
  local_action: "command aws route53 associate-vpc-with-hosted-zone --hosted-zone-id {{ dns_zone.Id }} --vpc VPCRegion={{ ec2_region }},VPCId={{ ec2_vpc_out.vpc_id }} --output json"

- name: get vpc id
  set_fact:
    vpc_id: "{{ ec2_vpc_out.vpc_id }}"

- name: get vpc private subnets
  set_fact:
    vpc_private_subnets: "{{ ec2_vpc_out.subnets | get_subnets('tier', 'private') }}"

- name: get vpc public subnets
  set_fact:
    vpc_public_subnets: "{{ ec2_vpc_out.subnets | get_subnets('tier', 'public') }}"
