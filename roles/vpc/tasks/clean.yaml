---
# find vpc id
- name: find bastion vpc
  ec2_vpc_net_facts:
    region: "{{ ec2_region }}"
    filters:
      cidr: "{{ vpc_cidr_block }}"
      tag:Name: gaia-vpc
  register: vpc_facts

- name: set vpc-id variable
  set_fact:
    vpc_id: "{{ vpc_facts.vpcs[0].id }}"
  when: vpc_facts.vpcs|length == 1

# discover hosted zone for VPC
- name: discover DNS zone (should be created by bastion playbooks)
  route53_facts:
    query: hosted_zone
    hosted_zone_method: list_by_name
    dns_name: "{{ vpc_dns_zone }}"
  register: dns_zone

# deassociate VPC with Bastion DNS zone
- name: deassociate VPC with Bastion DNS zone
  shell: "aws route53 disassociate-vpc-from-hosted-zone --vpc VPCRegion={{ ec2_region }},VPCId={{ vpc_id }} --hosted-zone-id {{ dns_zone.HostedZones[0].Id }}"
  register: zone_vpc_deassociation
  when:
    - vpc_id is defined
    - (dns_zone.HostedZones|length > 0) or (dns_zone.HostedZones[0].Name == vpc_dns_zone)
  changed_when: zone_vpc_deassociation.rc == 0
  ignore_errors: true

# delete VPC
- name: delete VPC
  ec2_vpc:
    region: "{{ ec2_region }}"
    cidr_block: "{{ vpc_cidr_block }}"
    resource_tags: "{{ vpc_resource_tags }}"
    vpc_id: "{{ vpc_id }}"
    state: absent
  when: vpc_id is defined
  ignore_errors: true
